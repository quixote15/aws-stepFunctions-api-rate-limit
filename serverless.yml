

service: sfn-api-ratelimit

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  region: us-east-1

plugins:
  - serverless-step-functions

functions:
  pollRequestsAndCheckQuotas:
    handler: handler.pollRequestsAndCheckQuotas
  requestIterator:
    handler: handler.requestIterator
  

stepFunctions:
  stateMachines:
    apiRateLimitOrchestrator:
      name: apiRateLimitOrchestrator
      definition:
        StartAt: PollRequestsAndCheckQuotas
        States:
          PollRequestsAndCheckQuotas:
            Type: Task
            Resource:
              Fn::GetAtt: [pollRequestsAndCheckQuotas, Arn]
            ResultPath: "$.requests"
            Next: RequestIterator
          RequestIterator:
            Type: Task
            Resource:
              Fn::GetAtt: [requestIterator, Arn]
            ResultPath: "$.hasPendingRequests"
            Next: IsRequestListEmpty
          IsRequestListEmpty:
            Type: Choice
            Choices:
              - Variable: $.hasPendingRequests.hasPendingRequests
                BooleanEquals: true
                Next: RequestIterator
            Default: EndRequestBatch
          EndRequestBatch:
            Type: Pass
            Result: "Finalizou batch de requisições"
            ResultPath: "$.done"
            End: true